// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Monitor is an autogenerated mock type for the Monitor type
type Monitor struct {
	mock.Mock
}

// CheckLatency provides a mock function with given fields: ctx
func (_m *Monitor) CheckLatency(ctx context.Context) (time.Duration, error) {
	ret := _m.Called(ctx)

	var r0 time.Duration
	if rf, ok := ret.Get(0).(func(context.Context) time.Duration); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(time.Duration)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMonitor interface {
	mock.TestingT
	Cleanup(func())
}

// NewMonitor creates a new instance of Monitor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMonitor(t mockConstructorTestingTNewMonitor) *Monitor {
	mock := &Monitor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
